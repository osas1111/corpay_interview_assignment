name: Push
on:
  pull_request:
    branches:
      - main

env:
  REPOSITORY: vars.PROD_ECR_REPO
  IMAGE_TAG: latest
  AWS_REGION: us-east-1
  RAILS_ENV: production
  DB_USER: secrets.PROD_DB_USER
  DB_PASSWORD: secrets.PROD_DB_PASSWORD
  DB_PORT: vars.PROD_PORT
  DB_HOST: vars.PROD_DB_HOST
  DB_NAME: secrets.PROD_DB_NAME

jobs:
  pipeline:
    name: Pipeline for build, test and deploy this service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $REGISTRY/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push $REGISTRY/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
      - uses: addnab/docker-run-action@v3
        with:
          image: "${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}"
          options: "-e RAILS_ENV=test -e LB_HOSTNAME=127.0.0.1"
          run: bundle exec rspec --format documentation --fail-fast
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~1.5.0
          terraform_wrapper: false
        run: terraform -auto-approve
        working-directory: terraform/auto/prod
        env:
          TF_VAR_rails_env: env.RAILS_ENV
          TF_VAR_db_user: env.DB_USER
          TF_VAR_db_password: env.DB_PASSWORD
          TF_VAR_db_port: env.DB_PORT
          TF_VAR_db_host: env.DB_HOST
          TF_VAR_db_name: env.DB_NAME
